@page "/NewApp"
@inject NavigationManager navigater;
@inject IAppService appservice;

<EditForm OnValidSubmit="Submit" Model="appModel">
    
    <div style="display: flex; flex-direction: row; margin-left: 19%">
        
        <div style="z-index: 1; margin-top: 20px">

    
            <form>
    
                <div class="group">      
                    <input id="appName" type="text" required @bind-value="@appModel.AppName">
                    <span class="highlight"></span>
                    <span class="bar"></span>
                    <label class="frm-label" for="appName">App Name</label>
                </div>
      
                <div class="group">      
                    <input id="packageName" type="text" required @bind-value="@appModel.PackageName">
                    <span class="highlight"></span>
                    <span class="bar"></span>
                    <label class="frm-label" for="packageName">Package Name</label>
                </div>
                
                <div class="group">      
                    <input id="description" type="text" required @bind-value="@appModel.Description">
                    <span class="highlight"></span>
                    <span class="bar"></span>
                    <label class="frm-label" for="description">App Description</label>
                </div>
                
                <div class="group">
                    <input id="addVersion" type="text" required @bind-value="@appRevisionsModel.AppVersion">
                    <span class="highlight"></span>
                    <span class="bar"></span>
                    <label class="frm-label" for="addVersion">App Version Nr</label>
                </div>
                
                <div class="group">
                    <input id="appVersionName" type="text" required @bind-value="@appRevisionsModel.AppVersionName">
                    <span class="highlight"></span>
                    <span class="bar"></span>
                    <label class="frm-label" for="appVersionName">App Version Name</label>
                </div>
            </form>
        

            
            
            <MudFileUpload Style="display:inline" T="IBrowserFile" Disabled="@disableWhenUploading" FilesChanged="UploadAPK" Context="cntxt">
                <ButtonTemplate>
                    <MudButton HtmlTag="label"
                               Variant="Variant.Filled"
                               Color="Color.Info"
                               StartIcon="@Icons.Material.Filled.Image"
                               for="@cntxt" Disabled="@disableWhenUploading">
                        Select APK
                    </MudButton>
                </ButtonTemplate>
            </MudFileUpload>
            
            

        </div>

        <div style="margin-left: 25%; ; margin-top: 7%; z-index: 2">
        
            @if (appModel.AppIcon != null && appModel.AppIcon != "")
            {
                <MudImage Width="180" Height="180" Src="@appModel.AppIcon" Alt="Mony the dog" Elevation="25" Class="rounded-lg" />

            }
            else
            {
                <MudImage Width="180" Height="180" Src="no-image.jpg" Alt="Mony the dog" Elevation="25" Class="rounded-lg" />
            }
            
            <br />
            <br />
            <br />
            <MudFileUpload T="IBrowserFile" FilesChanged="UploadFiles" Disabled="@disableWhenUploading" Context="cnt">
                <ButtonTemplate>
                    <MudButton HtmlTag="label"
                               Variant="Variant.Filled"
                               Color="Color.Info"
                               StartIcon="@Icons.Material.Filled.Image"
                               for="@cnt" Disabled="@disableWhenUploading">
                        Select App Icon
                    </MudButton>
                </ButtonTemplate>
            </MudFileUpload>
            
            
            <div style="margin-left: 18%; margin-top: 40%">
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" Disabled="@disableWhenUploading">Upload App</MudButton>
            </div>


        </div>

    </div>
    
    
    
    @if (apk != null)
    {
        <p style="margin-left: 9%; margin-top: -8px">@apk.Name</p>
    }
    else
    {
        <p style="margin-left: 9%;">&nbsp;</p>
    }
    
    
    
    </EditForm>



@if(submit)
{
   
    errMessage = string.Empty;
    <div style="margin-top: -18px">
        <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
    </div>
    

}
else
{
    <p style="color: red">@errMessage &nbsp;</p>
}

    




@code {
    IBrowserFile apk;
    bool submit = false;
    AppModel appModel = new AppModel();
    AppRevisionsModel appRevisionsModel = new();

    private bool checkValue;
    private string errMessage;
    private bool disableWhenUploading;
   

    protected override async Task OnInitializedAsync()
    {
        appModel.Revisions.Add(appRevisionsModel);
        disableWhenUploading = false;
    }

    async Task Submit()
    {
        if (apk != null)
        {
            submit = true;
            disableWhenUploading = true;
            var apkName = await appservice.CreateAPKPhysically(apk);
            appRevisionsModel.ApkPath = apkName;
            appRevisionsModel.ChangeSet = "INITAL RELEASE";
            appRevisionsModel.ID = Guid.NewGuid().ToString().Replace("-", "").Substring(0, 24);
            appRevisionsModel.ReleaseDate = DateTime.Now;
            await appservice.CreateNewApp(appModel);
            navigater.NavigateTo("/1", true);
            navigater.NavigateTo("/", true);
            
        }

        @if (string.IsNullOrWhiteSpace(appModel.AppName) || string.IsNullOrWhiteSpace(appModel.PackageName) || string.IsNullOrWhiteSpace(appModel.Description) || string.IsNullOrWhiteSpace(appRevisionsModel.AppVersion.ToString()) || string.IsNullOrWhiteSpace(appRevisionsModel.AppVersionName))
        {
            errMessage = "Please fill out al fields as well as upload an APK file and an APP icon";
        }
        else
        {
            errMessage = string.Empty;
        }

    }


    private async Task UploadFiles(IBrowserFile file)
    {
        Stream stream = file.OpenReadStream(1024 * 10000);
        byte[] bytes;
        using (var memoryStream = new MemoryStream())
        {
            await stream.CopyToAsync(memoryStream);
            bytes = memoryStream.ToArray();
        }
        string base64 = Convert.ToBase64String(bytes);
        appModel.AppIcon = "data:image/png;base64," + base64;
    }


    private async Task UploadAPK(IBrowserFile file)
    {
        apk = file;
    }

}

