@page "/NewRevision/{AppID}"
@inject IAppService appService;
@inject NavigationManager navigater;


<EditForm OnValidSubmit="Submit" Model="appRevision">

    @* <MudTextField @bind-Value="appRevision.AppVersionName" Required=true Label="Version Name" Variant="Variant.Text"></MudTextField>
    <MudNumericField Min="app.CurrentReleaseVersion+1" @bind-Value="appRevision.AppVersion" Label="Version Nr" Variant="Variant.Text"></MudNumericField>
    <MudTextField @bind-Value="appRevision.ChangeSet" Required=true Label="Changeset" Variant="Variant.Text"></MudTextField>*@
    
    <div style="margin-left: 38%; margin-top: 5%">

    

        <form>
        
            <div class="group">      
                <input id="appName" type="text" required @bind-value="@appRevision.AppVersionName">
                <span class="highlight"></span>
                <span class="bar"></span>
                <label class="frm-label" for="appName">Version Name</label>
            </div>
          
            <div class="group">      
                <input id="packageName" type="number" min="@app.CurrentReleaseVersion+1" required @bind-value="@appRevision.AppVersion">
                <span class="highlight"></span>
                <span class="bar"></span>
                <label class="frm-label" for="packageName">Version Nr</label>
            </div>
                    
            <div class="group">      
                <input id="description" type="text" required @bind-value="@appRevision.ChangeSet">
                <span class="highlight"></span>
                <span class="bar"></span>
                <label class="frm-label" for="description">Change set</label>
            </div>

        </form>

        <br />
        
        <div style="margin-left: 9%">

        

            <MudFileUpload Style="display:inline" T="IBrowserFile" FilesChanged="UploadAPK" Context="cntxt">
                <ButtonTemplate>
                    <MudButton HtmlTag="label"
                               Variant="Variant.Filled"
                               Color="Color.Info"
                               StartIcon="@Icons.Material.Filled.Image"
                               for="@cntxt">
                        Select APK
                    </MudButton>
                </ButtonTemplate>
            </MudFileUpload>
            
        </div>

    </div>
    
    <div style="display: flex; align-items: center; justify-content: center">
        
        @if (apk != null)
        {
           
            <p>@apk.Name</p>
        }

    </div>


    
 
    <br />
    <br />
    
    <div style="margin-left: 40%">
        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Disabled="@disableBtn" Class="ml-auto">Create and Publish Revision</MudButton>
    </div>
    
    
</EditForm>



@if(submit)
{
   
    errMessage = string.Empty;
    <div style="margin-top: 1%">
        <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
    </div>

    
  
      
}

<p style="color: red">@errMessage</p>


@code {
    private AppRevisionsModel appRevision = new AppRevisionsModel();
    private AppModel app;
    private bool submit;
    private bool disableBtn = false;
    IBrowserFile apk;
    private string errMessage;

    [Parameter]
    public string AppID { get; set; }

    protected override async Task OnInitializedAsync()
    {
        app = await appService.GetAppByID(AppID);
        appRevision.AppVersion = app.CurrentReleaseVersion + 1;
    }

    async Task Submit()
    {
        if (apk != null)
        {
            submit = true;
            disableBtn = true;
            var apkName = await appService.CreateAPKPhysically(apk);
            appRevision.ApkPath = apkName;
            appRevision.ReleaseDate = DateTime.Now;
            appRevision.ID = Guid.NewGuid().ToString().Replace("-","").Substring(0,24);
            app.Revisions.Add(appRevision);
            await appService.UpdateApp(app);
            navigater.NavigateTo("/1", true);
            navigater.NavigateTo($"/AppRevisions/{AppID}", true);

        }


        @if (string.IsNullOrWhiteSpace(appRevision.AppVersionName) || string.IsNullOrWhiteSpace(appRevision.AppVersion.ToString()) || string.IsNullOrWhiteSpace(appRevision.ChangeSet))
        {
            errMessage = "Please fill out al fields as well as upload an APK file";
        }
        else
        {
            errMessage = string.Empty;
        }



    }

    private async Task UploadAPK(IBrowserFile file)
    {
        apk = file;
    }

}



